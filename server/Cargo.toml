# SPDX-License-Identifier: GNU GENERAL PUBLIC LICENSE Version 3
#
# Copyleft (c) 2024 James Wong. This file is part of James Wong.
# is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# James Wong is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with James Wong.  If not, see <https://www.gnu.org/licenses/>.
#
# IMPORTANT: Any software that fully or partially contains or uses materials
# covered by this license must also be released under the GNU GPL license.
# This includes modifications and derived works.
#
[package]
name = "mywebnote"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[dependencies]
# Lang libs.
regex = "1.10.3"
chrono = { version = "0.4.38", features = ["serde"] }
uuid = { version = "1.9.1", default-features = false, features = ["v4"] }
thiserror = "1.0.61"
anyhow = "1.0.86"
arc-swap = "1.7.1"
once_cell = "1.19.0"
sysinfo = "0.29.11"
base64 = "0.22.1"
hex = "0.4.3"
#rand = "0.8.5"
# syrette = "0.5.1"
mimalloc = { version = "0.1.43", default-features = false }
local-ip-address = "0.6.1"
#
# Config libs.
config = "0.14.0"
#
# Command line libs.
clap = "4.5.7"
# Serialization libs.
serde = { version = "1.0.197", features = ["derive"] }
serde_json = "1.0.64"
serde_yaml = "0.9.32"
validator = { version = "0.18.1", features = ["derive"] }
#
# Logger libs.
env_logger = "0.11.3"
log = "0.4.22"
#
# Prometheus libs.
lazy_static = "1.4.0"
prometheus = "0.13.4"
axum-prometheus = "0.6.1"
#
# Tracing libs.
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["json", "env-filter"] }
tracing-opentelemetry = "0.24.0"
tracing-futures = "0.2"
tracing-attributes = "0.1.26"
opentelemetry = { version = "0.23.0" }
opentelemetry_sdk = { version = "0.23.0", features = ["rt-tokio"] }
opentelemetry-otlp = { version = "0.16.0", features = ["grpc-tonic"] }
opentelemetry-http = { version = "0.12.0" }
#
# Async core libs.
tokio = { version = "1.38.0", features = ["full", "tracing"] }
# Async core trait polymorphism libs.
async-trait = "0.1.81"
#
# APM libs.
# Notice: Use optional dependencies to avoid slow automatic compilation during debugging
# (because if rely on console-subscriber, need to enable RUSTFLAGS="--cfg tokio_unstable" which
# will invalidate the compile-time cache).
console-subscriber = { version = "0.3.0", optional = true }
pyroscope = { version = "0.5.6", optional = true}
pyroscope_pprofrs = { version = "0.2.5", optional = true }
#
# Web HTTP libs.
axum = { version = "0.7.5" }
hyper = { version = "1.3.1", features = ["full"] }
tower = "0.4.1"
tower-http = { version = "0.5.2", features = ["trace", "auth"] }
tower-cookies = "0.10.0"
globset = "0.4.14" # ant glob path patterns
#user_agent = "0.11.0"
rust-embed = "8.5.0"
mime_guess = "2.0.4"
#include_dir = "0.7.3"
#
# Database libs.
mongodb = "3.0.1"
futures = "0.3"
sqlx = { version = "0.7.4", features = [
    "runtime-tokio-rustls",
    # "runtime-async-std",
    "sqlite",
    "macros",
    "chrono"
] }
# Swagger libs.
utoipa = { version = "4.2.3", features = ["axum_extras"] }
utoipa-swagger-ui = { version = "7.1.0", features = ["axum"] }
mac_address = "1.1.7"
# Auth libs.
reqwest = { version = "0.12.5", features = ["json"] }
url = "2.3"
oauth2 = "4.3"
openidconnect = "3.5.0"
jsonwebtoken = "9.3.0"
# Encrypt libs.
openssl = "0.10.64"
rsa = "0.9.6"
sha2 = "0.10.8"
# Cache libs.
moka = { version = "0.12.8", features = ["future"] }
redis = { version = "0.25.4", features = ["tokio-comp", "cluster-async"] }
# Ethers libs.
ethers = { version = "2.0.14", features = ["abigen", "ws", "rustls"] }
eyre = "0.6.12"
#
# Custom macro libs.
common-log-macro = { path = "./components/common-log-macro" }
common-makestruct-macro = { path = "./components/common-makestruct-macro" }
common-smartcpy-macro = { path = "./components/common-smartcpy-macro" }

[dev-dependencies]
# Benchmarks libs.
criterion = "0.5.1"

[build-dependencies]
chrono = { version = "0.4.38", default-features = false, features = ["clock"] }

[features]
# Notice: Use optional dependencies to avoid slow automatic compilation during debugging
# (because if rely on console-subscriber, need to enable RUSTFLAGS="--cfg tokio_unstable" which
# will invalidate the compile-time cache).
tokio-console = ["console-subscriber"]
profiling = ["dep:pyroscope", "dep:pyroscope_pprofrs"]

[[bin]]
name = "mywebnote"
path = "src/main.rs"

[[bench]]
name = "path_matching"
harness = false

#
# [[bin]]
# name = "mywebnote_cli"
# path = "src/cmd/cli.rs"
#
[build]
# Enable experimental, but invalid?
# valid command-line: RUSTFLAGS="--cfg tokio_unstable" && cargo build
# see:https://github.com/wl4g-collect/tokio-rs-console/tree/main/console-subscriber#enabling-tokio-instrumentation
rustflags = ["--cfg", "tokio_unstable"]
